package com.github.lyokofirelyte.WASpleef;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;

import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.event.Listener;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;


public class WASpleefMain extends JavaPlugin implements Listener {

public WASpleefMain(){}

File configFile;
File datacoreFile;
FileConfiguration config;
FileConfiguration datacore;

@Override
public void onEnable(){

PluginManager pm = getServer().getPluginManager();
pm.registerEvents(new WASC_Spleef(this), this);
pm.registerEvents(new WASpleefChat(this), this);


	getCommand("spleef").setExecutor(new WASC_Spleef(this));
	getCommand("spleeffall").setExecutor(new WASC_SpleefFall(this));
	Plugin worldguard = getServer().getPluginManager().getPlugin("WorldGuard");
	Plugin worldedit = getServer().getPluginManager().getPlugin("WorldEdit");
	Plugin variabletriggers = getServer().getPluginManager().getPlugin("VariableTriggers");
	configFile = new File(getDataFolder(), "config.yml");
	datacoreFile = new File(getDataFolder(), "datacore.yml");
	
	try {
		
		firstRun();
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	config = new YamlConfiguration();
	datacore = new YamlConfiguration();
	loadYamls();
	
	if (worldguard == null || worldedit == null || variabletriggers == null){
		
		getLogger().log(Level.SEVERE, "This plugin requires WorldGuard, WorldEdit, and VariableTriggers to function, sorry!");
		getLogger().log(Level.SEVERE, "We use VT so we don't have too many onPlayerMove events lagging the pLace up.");
		pm.disablePlugin(this);
		return;
	}
	
	getLogger().log(Level.INFO, "WASpleef is ready to go! :D");

}



public void onDisable() {
	
	getLogger().info("WASpleef has been disabled.");
	saveYamls();
	
}



private void firstRun() throws Exception {
    if(!configFile.exists()){
        configFile.getParentFile().mkdirs();
        copy(getResource("config.yml"), configFile);
    }
    if(!datacoreFile.exists()){
    	datacoreFile.getParentFile().mkdirs();
        copy(getResource("datacore.yml"), datacoreFile);
    }


}

private void copy(InputStream in, File file) {
    try {
        OutputStream out = new FileOutputStream(file);
        byte[] buf = new byte[1024];
        int len;
        while((len=in.read(buf))>0){
            out.write(buf,0,len);
        }
        out.close();
        in.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
    
}

public void saveYamls() {

    try {
        config.save(configFile);
        datacore.save(datacoreFile);
    } catch (IOException e) {
        e.printStackTrace();
    }
}


public void loadYamls() {
    try {
        config.load(configFile);
        datacore.load(datacoreFile);
    } catch (Exception e) {
        e.printStackTrace();
    }
}

}
